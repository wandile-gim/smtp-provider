// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ConfigurationsColumns holds the columns for the "configurations" table.
	ConfigurationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "host", Type: field.TypeString},
		{Name: "port", Type: field.TypeInt32},
		{Name: "username", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "enable", Type: field.TypeBool},
	}
	// ConfigurationsTable holds the schema information for the "configurations" table.
	ConfigurationsTable = &schema.Table{
		Name:       "configurations",
		Columns:    ConfigurationsColumns,
		PrimaryKey: []*schema.Column{ConfigurationsColumns[0]},
	}
	// TenantsColumns holds the columns for the "tenants" table.
	TenantsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "tenant_name", Type: field.TypeString},
	}
	// TenantsTable holds the schema information for the "tenants" table.
	TenantsTable = &schema.Table{
		Name:       "tenants",
		Columns:    TenantsColumns,
		PrimaryKey: []*schema.Column{TenantsColumns[0]},
	}
	// TenantConfigurationsColumns holds the columns for the "tenant_configurations" table.
	TenantConfigurationsColumns = []*schema.Column{
		{Name: "tenant_id", Type: field.TypeUUID},
		{Name: "configuration_id", Type: field.TypeUUID},
	}
	// TenantConfigurationsTable holds the schema information for the "tenant_configurations" table.
	TenantConfigurationsTable = &schema.Table{
		Name:       "tenant_configurations",
		Columns:    TenantConfigurationsColumns,
		PrimaryKey: []*schema.Column{TenantConfigurationsColumns[0], TenantConfigurationsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tenant_configurations_tenant_id",
				Columns:    []*schema.Column{TenantConfigurationsColumns[0]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "tenant_configurations_configuration_id",
				Columns:    []*schema.Column{TenantConfigurationsColumns[1]},
				RefColumns: []*schema.Column{ConfigurationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ConfigurationsTable,
		TenantsTable,
		TenantConfigurationsTable,
	}
)

func init() {
	TenantConfigurationsTable.ForeignKeys[0].RefTable = TenantsTable
	TenantConfigurationsTable.ForeignKeys[1].RefTable = ConfigurationsTable
}
